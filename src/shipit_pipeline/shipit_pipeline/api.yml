---
swagger: "2.0"
info:
  version: "1.0.0"
  title: "Pipeline service"
consumes:
  - application/json
produces:
  - application/json
paths:

  /:

    get:
      operationId: "shipit_pipeline.api.list_pipelines"
      description: List all pipelines
      responses:
        200:
          description: List of all pipelines

  /{uid}/definition:

    get:
      operationId: "shipit_pipeline.api.get_pipeline"
      description: Pipeline definition
      parameters:
          - $ref: '#/parameters/uid'
      responses:
        200:
          description: Definition of pipeline
          schema:
            $ref: '#/definitions/Pipeline'


  /{uid}/status:

    get:
      operationId: "shipit_pipeline.api.get_pipeline_status"
      description: Status of a pipeline
      parameters:
        - $ref: "#/parameters/uid"
      responses:
        200:
          description: Status of a pipelines
          schema:
            $ref: '#/definitions/PipelineResult'

  /{uid}:
    put:
      operationId: "shipit_pipeline.api.create_pipeline"
      description: Create new pipeline
      parameters:
        - $ref: "#/parameters/uid"
        - $ref: "#/parameters/pipeline"
      responses:
        200:
          description: Returns nothing

    delete:
      operationId: "shipit_pipeline.api.delete_pipeline"
      description: Remove a pipeline
      parameters:
        - $ref: '#/parameters/uid'
      responses:
        200:
          description: Removal of pipeline

  # Pipeline specific

  /ticktock:
    put:
      operationId: "shipit_pipeline.api.ticktock"
      description: "Check pipelines for status, and move to next steps when possible"
      responses:
        200:
          description: refreshed

definitions:

  PipelineResult:
    type: object
    required:
      - state
    properties:
      state:
        type: string
        enum:
          - starting # / pending
          - running
          - stopping
          - exception
          - completed #/ success
          - failed
      message:
        type: string
        description: More elaborate description of state for humans.
      output:
        $ref: '#/definitions/Output'

  # Step:
  #   type: object
  #   required:
  #     - uid
  #     - parameters
  #   properties:
  #     uid:
  #       type: string
  #     parameters:
  #       $ref: '#/definitions/Parameters'
  #

  # Pipeline is like a subclass of Step
  Pipeline:
    type: object
    required:
      - uid
      - parameters
    properties:
      uid:
        type: string
      parameters:
        type: object
        required:
          - steps
        properties:
          steps:
            type: array
            items:
              $ref: '#/definitions/PipelineStep'

  PipelineStep:
    type: object
    required:
      - uid
      - parameters_schema
      - parameters
      - description
      - requires
    properties:
      uid:
        type: string
        description: UID of this step

      api_url:
        type: string
        description: >
          The base URL for this step's service, which is prepended to uid and
          is used to PUT (to create this step) and GET (to retrieve status on
          this step)

      parameters_schema:
        type: string
        description: The schema used to validate this step's parameters.

      parameters:
        type: object
        description: input parameters for this particular step of the pipeline

      description:
        type: string
        description: Description of this step in the pipeline.

      requires:
        type: array
        items:
          type: string
        description: A list of step UIDs that this step depends on.

  Output:
    type: object

parameters:
    uid:
        name: uid
        in: path
        description: Pipeline UID
        required: true
        type: string

    pipeline:
        name: pipeline
        in: body
        description: Pipeline definition
        required: true
        schema:
          $ref: '#/definitions/Pipeline'
